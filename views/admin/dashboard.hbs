
<link rel="stylesheet" href="/DataTables/datatables.css" />
 
<script src="/DataTables/datatables.js"></script>
<style>
    /* Basic Reset */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: Arial, sans-serif;
        line-height: 1.6;
        color: #333;
        background-color: #f9f9f9;
    }

    /* Header Styles */
    header {
        background-color: #003366;
        color: #fff;
        padding: 10px 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 1.5rem;
        font-weight: bold;
    }

    nav {
        flex: 1;
        text-align: right;
    }

    .nav-links {
        list-style: none;
        display: flex;
        justify-content: flex-end;
        gap: 20px;
    }

    .nav-links li a {
        color: #fff;
        text-decoration: none;
        font-weight: bold;
    }

    .btn {
        padding: 10px 20px;
        background-color: #007acc;
        color: #fff;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        margin-left: 10px;
    }

    .btn:hover {
        background-color: #005999;
    }

    /* Hero Section */
    .hero {
        background: url('hero-image.jpg') no-repeat center center/cover;
        color: #757f9d;
        text-align: center;
        padding: 100px 20px;
    }

    .hero h1 {
        font-size: 2.5rem;
        margin-bottom: 20px;
    }

    .hero p {
        font-size: 1.2rem;
        margin-bottom: 30px;
    }

    /* Product Section */
    .products {
        padding: 50px 20px;
        background-color: #c4c2c2;

        image-rendering: crisp-edges;
    }

    .products h2 {
        text-align: center;
        margin-bottom: 20px;
    }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .product {
        background: #f4f4f4;
        padding: 20px;
        text-align: center;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product img {
        max-width: 100%;
        height: auto;
        border-radius: 5px;
    }

    /* Footer */
    footer {
        background-color: #003366;
        color: #fff;
        text-align: center;
        padding: 20px;
    }

    @media (max-width: 768px) {
        .container {
            flex-direction: column;
            text-align: center;
        }

        .nav-links {
            flex-direction: column;
            gap: 10px;
        }

        .hero h1 {
            font-size: 2rem;
        }

        .hero p {
            font-size: 1rem;
        }
    }
</style>
</head>

  <body>
    <!-- Navigation Bar -->
    <header>
        <div class="container">
            <div class="logo">Dell Admin</div>
            <nav>
                <ul class="nav-links">
                    <li><a href="#">Home</a></li>
                    <li><a href="#products">Products</a></li>
                    <li><a href="#about">About</a></li>
                    <li><a href="#contact">Contact</a></li>

                </ul>

            </nav>
            <a href="/log"><button class="btn" href="">Logout</button></a>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero bg co">
        <div class="container">
            <h1 class="bg-Dark">Innovate with Dell</h1>
            <p>Explore the latest technology to power your world.</p>
            <button class="btn add-user-btn" onclick="openAddUserModal()">Add user</button><br>
        </div>

        <!-- Custom Search Input -->


        <div class="container">
            <table class="table" id="productsTable">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody >
                    {{#each users}}
                    <tr>
                        <td>{{@index}}</td>
                        <td>{{this.name}}</td>
                        <td>{{this.email}}</td>
                        <td>{{this.phone}}</td>
                        <td>
                            <button type="button" class="btn btn-primary btn-sm"
                                onclick="openEditUserModal('{{this._id}}', '{{this.name}}', '{{this.email}}', '{{this.phone}}')">
                                Edit
                            </button>
                            <button type="button" class="btn btn-danger btn-sm"
                                onclick="deleteUser('{{this._id}}')">Delete</button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </section>
    <script>
        $(document).ready( function () {
    $('#productsTable').DataTable();
} );
    </script>

    <!-- Scripts for DataTable and Search Functionality -->
    <script>
      // Filter users in the table
    function filterUsers() {
      const query = document.getElementById('searchBar').value.toLowerCase();
      const rows = document.querySelectorAll('#userTableBody tr');
      rows.forEach(row => {
        const name = row.children[1].textContent.toLowerCase();
        const email = row.children[2].textContent.toLowerCase();
        row.style.display = name.includes(query) || email.includes(query) ? '' : 'none';
      });
    }
    </script>
</body>

    <!-- Product Showcase -->
    <!-- Editing Modal -->
    <div id="editUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditUserModal()">&times;</span>
            <h2>Edit User</h2>
            <form id="editUserForm">
                <input type="hidden" id="editUserId">
                <div class="form-group">
                    <label for="editUserName">Name:</label>
                    <input type="text" id="editUserName" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="editUserEmail">Email:</label>
                    <input type="email" id="editUserEmail" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="editUserPhone">Phone:</label>
                    <input type="text" id="editUserPhone" class="form-control" required>
                </div>
                <button type="submit" class="btn btn-success">Save Changes</button>
            </form>
        </div>
    </div>


    <script>
        function openEditUserModal(id, name, email, phone) {
            document.getElementById("editUserId").value = id;
            document.getElementById("editUserName").value = name;
            document.getElementById("editUserEmail").value = email;
            document.getElementById("editUserPhone").value = phone;
            document.getElementById("editUserModal").style.display = "block";
        }

        function closeEditUserModal() {
            document.getElementById("editUserModal").style.display = "none";
        }

        document.getElementById("editUserForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const id = document.getElementById("editUserId").value;
            const name = document.getElementById("editUserName").value;
            const email = document.getElementById("editUserEmail").value;
            const phone = document.getElementById("editUserPhone").value;

            try {
                const response = await fetch(`/userse`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ name, phone, email, id }),
                });

                if (response.ok) {
                    alert("User updated successfully!");
                    location.reload(); // Refresh the page to reflect the changes
                } else {
                    alert("Failed to update user.");
                }
            } catch (error) {
                console.error("Error:", error);
            }
        });

        // Close modal when clicking outside of it
        window.onclick = function (event) {
            const modal = document.getElementById("editUserModal");
            if (event.target === modal) {
                closeEditUserModal();
            }





        };



    </script>
    <script>
        async function deleteUser(id) {
            if (!confirm("Are you sure you want to delete this user?")) return;

            try {
                const response = await fetch(`/users/${id}`, {
                    method: "DELETE",
                });

                if (response.ok) {
                    alert("User deleted successfully!");
                    location.reload(); // Refresh the page
                } else {
                    const errorData = await response.json();
                    alert(`Failed to delete user: ${errorData.msg || "Unknown error"}`);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("An error occurred while deleting the user.");
            }
        }
    </script>


    <!-- Footer -->
    <footer>
        <div class="container">
            <p>&copy; 2025 Dell Technologies. All Rights Reserved.</p>
        </div>
    </footer>
    <!-- Add User Modal -->
    <div id="addUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddUserModal()">&times;</span>
            <h2>Add User</h2>
            <form id="addUserForm">
                <div class="form-group">
                    <label for="addUserName">Name:</label>
                    <input type="text" id="addUserName" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="addUserEmail">Email:</label>
                    <input type="email" id="addUserEmail" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="addUserPhone">Phone:</label>
                    <input type="text" id="addUserPhone" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="addUserPassword">Password:</label> <!-- Fixed the id and label -->
                    <input type="password" id="addUserPassword" class="form-control" required>
                </div>
                <button type="submit" class="btn btn-success">Add User</button>
            </form>
        </div>
    </div>
    <script>
        // Open and Close Modals for Adding Users
        function openAddUserModal() {
            document.getElementById("addUserModal").style.display = "block";
        }

        function closeAddUserModal() {
            document.getElementById("addUserModal").style.display = "none";
        }

        // Add User Form Submission
        document.getElementById("addUserForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const name = document.getElementById("addUserName").value;
            const email = document.getElementById("addUserEmail").value;
            const phone = document.getElementById("addUserPhone").value;
            const password = document.getElementById("addUserPassword").value; // Fixed password id

            // Basic validation
            if (!name || !email || !phone || !password) {
                alert("Please fill in all fields.");
                return;
            }

            try {
                const response = await fetch(`/use`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ name, email, phone, password }),
                });

                if (response.ok) {
                    const result = await response.json();
                    alert(`User added successfully! User ID: ${result.user._id}`);
                    location.reload(); // Refresh the page to reflect the changes
                } else {
                    const error = await response.json();
                    alert(`Failed to add user: ${error.msg}`);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("User added successfully");
                  location.reload();
            }
        });
    </script>
</body>

</html>